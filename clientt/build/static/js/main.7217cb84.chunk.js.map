{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/Loader.js","components/LinksList.js","pages/LinksPage.js","pages/CreatePage.js","components/LinkCard.js","pages/DetailPage.js","pages/AuthPage.js","hooks/message.hook.js","hooks/auth.hook.js","components/Navbar.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","index","from","to","_id","LinksPage","setLinks","useContext","fetchLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","setLink","window","M","updateTextFields","pressHandler","event","key","console","log","push","placeholder","id","type","value","onChange","e","target","onKeyPress","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","marginRight","disabled","onClick","storageName","Navbar","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7217cb84.chunk.js","sourcesContent":["import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    setLoading(true)\r\n    try {\r\n      if (body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n\r\n      const response = await fetch(url, {method, body, headers})\r\n      const data = await response.json()\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Что-то пошло не так')\r\n      }\r\n\r\n      setLoading(false)\r\n\r\n      return data\r\n    } catch (e) {\r\n      setLoading(false)\r\n      setError(e.message)\r\n      throw e\r\n    }\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => setError(null), [])\r\n\r\n  return { loading, request, error, clearError }\r\n}\r\n\r\n\r\n/*\r\nimport { useCallback, useState } from 'react'\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading ] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const request = useCallback( async (url, method='GET', body = null, headers = {}) => {\r\n\r\n    setLoading(true)\r\n\r\n    try {\r\n       //if is body. Formatted body\r\n      if (body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n\r\n        const response = await fetch(url, {method, body, headers})\r\n        const data = await response.json()\r\n\r\n        if (!response.ok) {\r\n            throw new Error(data.message || 'Something wrong')\r\n        }\r\n        setLoading(false)\r\n        return data\r\n\r\n    } catch(e) {\r\n        //console.log('Catch:', e.message) //For Debug\r\n        setLoading(false)\r\n        setError(e.message)\r\n        throw e\r\n\r\n    }\r\n\r\n  }, []) //Second parameters for useCallback\r\n\r\n  const clearError = useCallback( () => setError(null), [])\r\n\r\n  return {loading, request, error, clearError}\r\n}\r\n*/","import { createContext } from 'react'\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext( {\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n} )","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n    <div style={{ display: 'flex', justifyContent: 'center', paddingTop: '2rem' }}>\r\n\r\n    <div className=\"preloader-wrapper active\">\r\n    <div className=\"spinner-layer spinner-red-only\">\r\n      <div className=\"circle-clipper left\">\r\n        <div className=\"circle\"></div>\r\n      </div><div className=\"gap-patch\">\r\n        <div className=\"circle\"></div>\r\n      </div><div className=\"circle-clipper right\">\r\n        <div className=\"circle\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  </div>\r\n)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const LinksList = ({ links }) => {\r\n    if (!links.length) {\r\n      return <p className=\"center\">Ссылок пока нет</p>\r\n    }\r\n    return (\r\n        <table>\r\n        <thead>\r\n          <tr>\r\n              <th>№</th>\r\n              <th>Original</th>\r\n              <th>Short</th>\r\n              <th>Open</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            { links.map((link, index) => {\r\n                return (\r\n                         <tr key={link._id}>\r\n                             <td>{index + 1 }</td>\r\n                             <td>{link.from}</td>\r\n                             <td>{link.to}</td>\r\n                             <td>\r\n                                 <Link to={`/detail/${link._id}`} >Open</Link>\r\n                             </td>\r\n                         </tr>\r\n                      )\r\n            } ) }\r\n          \r\n         \r\n        </tbody>\r\n      </table>\r\n    )\r\n\r\n}","import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport {LinksList} from '../components/LinksList'\r\n\r\nexport const LinksPage = () => {\r\n  const [links, setLinks] = useState([])\r\n  const {loading, request} = useHttp()\r\n  const {token} = useContext(AuthContext)\r\n\r\n  const fetchLinks = useCallback(async () => {\r\n    try {\r\n      const fetched = await request('/api/link', 'GET', null, {\r\n        Authorization: `Bearer ${token}`\r\n      })\r\n      setLinks(fetched)\r\n    } catch (e) {}\r\n  }, [token, request])\r\n\r\n  useEffect(() => {\r\n    fetchLinks()\r\n  }, [fetchLinks])\r\n\r\n  if (loading) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!loading && <LinksList links={links} />}\r\n    </>\r\n  )\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport const CreatePage = () => {\r\n  const history = useHistory()\r\n  const auth = useContext(AuthContext)\r\n  const {request} = useHttp()\r\n  const [link, setLink] = useState('')\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  const pressHandler = async event => {\r\n    if (event.key === 'Enter') {\r\n      try {\r\n        const data = await request('/api/link/generate', 'POST', {from: link}, {\r\n          Authorization: `Bearer ${auth.token}`\r\n        })\r\n        console.log('Data: ', data)\r\n        history.push(`/detail/${data.link._id}`)\r\n      } catch (e) {}\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\" style={{paddingTop: '2rem'}}>\r\n        <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Вставьте ссылку\"\r\n            id=\"link\"\r\n            type=\"text\"\r\n            value={link}\r\n            onChange={e => setLink(e.target.value)}\r\n            onKeyPress={pressHandler}\r\n          />\r\n          <label htmlFor=\"link\">Введите ссылку</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport const LinkCard = ( {link} ) => {\r\n    return (\r\n        <>\r\n        <h2>Link</h2>\r\n        <p> Your link:<a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\r\n        <p> From:<a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\r\n        <p> Clicks:<strong> {link.clicks} </strong></p>\r\n        <p> Dated:<strong> {new Date(link.date).toLocaleDateString()} </strong></p>\r\n\r\n        </>\r\n    )\r\n\r\n}","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { Loader } from '../components/Loader'\r\nimport { LinkCard } from '../components/LinkCard'\r\n\r\nexport const DetailPage = () => {\r\n    const {token} = useContext(AuthContext)\r\n    const {request, loading} = useHttp()\r\n    const [link, setLink] = useState(null)\r\n\r\n    const linkId = useParams().id\r\n    //console.log('LinkId:', linkId) //For Debug. Look linkId\r\n\r\n    const getLink = useCallback(async () => {    \r\n           try {\r\n               const fetched = await request(`/api/link/${linkId}`, 'GET', null, {\r\n                   Authorization: `Bearer ${token}`\r\n               })\r\n               setLink(fetched)\r\n\r\n                 \r\n                } catch (e) {}\r\n\r\n    }, [token, linkId, request])\r\n\r\n    useEffect( () => {\r\n        getLink()\r\n    }, [getLink] )\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n           { !loading && link && <LinkCard link={link} /> }\r\n        </>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport { useMessage } from '../hooks/message.hook'\r\nimport { AuthContext } from '../context/AuthContext'\r\n\r\nexport const AuthPage = () => {\r\n  const auth = useContext(AuthContext)\r\n  const message = useMessage()\r\n  const {loading, request, error, clearError} = useHttp()\r\n  const [form, setForm] = useState( {\r\n     email: '',\r\n     password: ''\r\n    })\r\n\r\nuseEffect( ()=> {\r\n                  // console.log('Error', error) //For Debug\r\n                  message(error)\r\n                  clearError()\r\n}, [error, message, clearError] )\r\n\r\n//Update texts inputs!!!\r\nuseEffect ( () => {\r\n  window.M.updateTextFields()\r\n}, [] )\r\n\r\n\r\n    const changeHandler = event => {\r\n      setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n//SingUp user    \r\n    const registerHandler = async () => {\r\n      try {\r\n          const data = await request('/api/auth/register', 'POST', {...form}) // routes/auth.routes.js\r\n          //console.log('Data', data) //For Debud\r\n          message(data.message)\r\n      }catch(e) {}\r\n    }\r\n\r\n//Login user\r\nconst loginHandler = async () => {\r\n  try {\r\n      const data = await request('/api/auth/login', 'POST', {...form}) // routes/auth.routes.js\r\n      //console.log('Data', data) //For Debud\r\n      //message(data.message)\r\n      auth.login(data.token, data.userId)\r\n  }catch(e) {}\r\n}\r\n\r\n\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>Shorts link</h1>\r\n\r\n                <div className=\"card blue darken-1\">\r\n        <div className=\"card-content white-text\">\r\n          <span className=\"card-title\">Authenticate</span>\r\n\r\n          <div>\r\n\r\n          <div className=\"input-field\">\r\n              <input \r\n                    placeholder=\"Enter Email\" \r\n                    id=\"email\" \r\n                    type=\"text\" \r\n                    name=\"email\"\r\n                    className=\"yellow-input\"\r\n                    value={form.email}\r\n                    onChange = {changeHandler}\r\n              />\r\n          <label htmlFor=\"email\">Email</label>\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n              <input \r\n                    placeholder=\"Enter password\" \r\n                    id=\"password\" \r\n                    type=\"password\" \r\n                    name=\"password\"\r\n                    className=\"yellow-input\"\r\n                    value={form.password}\r\n                    onChange = {changeHandler}\r\n              />\r\n          <label htmlFor=\"password\">Password</label>\r\n        </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <button \r\n                 className=\"btn yellow darken-4\" \r\n                 style={{marginRight: 10}}\r\n                 disabled={loading}\r\n                 onClick={loginHandler}\r\n                 >\r\n                   SingIn\r\n          </button>\r\n\r\n          <button \r\n            className=\"btn grey lighten-1 black-text\"\r\n            onClick={registerHandler}\r\n            disabled={loading}\r\n                 >\r\n                   SingUp\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import {useCallback} from 'react'\r\n\r\nexport const useMessage = () => {\r\n    return useCallback( text => {\r\n        if (window.M && text) {\r\n            window.M.toast({ html: text})\r\n        }\r\n    }, [] )\r\n}","import { useState, useCallback, useEffect } from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const [userId, setUserId] = useState(null)\r\n\r\n    const login = useCallback( (jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify( {userId: id, token: jwtToken}))\r\n    }, [])\r\n\r\n    const logout = useCallback( () => {\r\n        setToken(null)\r\n        setUserId(null)\r\n\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect( ()=>{\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId)\r\n        }\r\n        setReady(true)\r\n    }, [login] )\r\n\r\n    return {login, logout, token, userId, ready}\r\n}","import React, { useContext } from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../context/AuthContext'\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n\r\n    const logoutHandler = event => {\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <nav>\r\n    <div className=\"nav-wrapper blue darken-1 style={{ padding: '0 2rem' }}\">\r\n      <span className=\"brand-logo\">Shorted Links</span>\r\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n        <li><NavLink to=\"/create\">Create</NavLink></li>\r\n        <li><NavLink to=\"/links\">Links</NavLink></li>\r\n        <li><a href=\"/\" onClick={logoutHandler}>LogOut</a></li>\r\n        \r\n      </ul>\r\n    </div>\r\n  </nav>\r\n    )\r\n}","//******Style******** */\n//https://materializecss.com/getting-started.html\n//npm install materialize-css@next\n//\n//npm install react-router-dom\n\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { useRoutes } from './routes'\nimport { useAuth } from './hooks/auth.hook'\nimport { AuthContext } from './context/AuthContext'\nimport 'materialize-css'\nimport { Navbar } from './components/Navbar';\nimport { Loader } from './components/Loader'\n\n\nfunction App() {\n  const {token, login, logout, userId, ready} = useAuth()\n  const isAuthenticated = !!token\n  const routes = useRoutes(isAuthenticated)\n\nif (!ready) {\n  return <Loader />\n}\n\n  return (\n    <AuthContext.Provider value={{\n      token, login, logout, userId, isAuthenticated\n    }}>\n    <Router>\n     { isAuthenticated && <Navbar />}\n\n   <div className=\"container\">\n     {routes}\n   </div> \n   </Router>\n   </AuthContext.Provider>\n  )\n}\n\nexport default App;\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LinksPage } from './pages/LinksPage'\r\nimport { CreatePage } from './pages/CreatePage'\r\nimport { DetailPage } from './pages/DetailPage'\r\nimport { AuthPage } from './pages/AuthPage'\r\n\r\nexport const useRoutes = isAuthenticated => {\r\nif (isAuthenticated) {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/links\" exact>\r\n                <LinksPage />\r\n            </Route>\r\n\r\n            <Route path=\"/create\" exact>\r\n                <CreatePage />\r\n            </Route>\r\n\r\n            <Route path=\"/detail/:id\">\r\n                <DetailPage />\r\n            </Route>\r\n\r\n            <Redirect to=\"/create\" />\r\n        </Switch>\r\n    )\r\n}\r\nreturn (\r\n    <Switch>\r\n        <Route path=\"/\" exact>\r\n            <AuthPage />\r\n        </Route>\r\n\r\n        <Redirect to=\"/\" />\r\n    </Switch>\r\n)\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}